const pdfAnalyzer = `// PDF formatı kontrolü if (responseText.startsWith("%PDF-")) { console.log("Yanıt PDF formatında. PDF içeriğinden barkod numarası aranıyor..."); // 1. İlk olarak IDAutomationHC39M font bölümünü bul if (responseText.includes("IDAutomationHC39M")) { console.log("Barkod fontu (IDAutomationHC39M) tespit edildi"); } // 2. PDF obje yapısında asterisk ile ilişkili bölümleri ara const asteriskSection = responseText.match(/asterisk[^]*?(\d{10,15})[^]*?endobj/); if (asteriskSection) { const numbersInSection = asteriskSection[0].match(/\b(\d{10,15})\b/g); if (numbersInSection) { // 400 ile başlayan 13 haneli sayıları önceliklendir const candidates = numbersInSection.filter(num => num.length >= 10) .sort((a, b) => { const aScore = (a.length === 13 ? 10 : 0) + (a.startsWith("400") ? 5 : 0); const bScore = (b.length === 13 ? 10 : 0) + (b.startsWith("400") ? 5 : 0); return bScore - aScore; }); if (candidates.length > 0) { barkodNo = candidates[0]; // 13 haneli olacak şekilde düzenle if (barkodNo.length > 13) barkodNo = barkodNo.substring(0, 13); console.log("PDF obje yapısından barkod çıkarıldı:", barkodNo); } } } // 3. İki * işareti arasındaki sayıları ara (PDF metni içinde) if (!barkodNo) { const starPattern = responseText.match(/\*\s*(\d{10,15})\s*\*/); if (starPattern && starPattern[1]) { barkodNo = starPattern[1]; console.log("İki yıldız arasında barkod bulundu:", barkodNo); // 13 haneli olacak şekilde düzenle if (barkodNo.length > 13) { barkodNo = barkodNo.substring(0, 13); console.log("13 haneye kısaltıldı:", barkodNo); } } } // 4. Son çare: tüm uzun sayıları topla ve analiz et if (!barkodNo) { console.log("PDF içinden diğer yöntemlerle barkod aranıyor..."); // Tüm 10+ basamaklı sayıları bul const allNumbers = []; let currentDigits = ""; for (let i = 0; i < responseText.length; i++) { const char = responseText[i]; if (char >= "0" && char <= "9") { currentDigits += char; } else if (currentDigits.length > 0) { if (currentDigits.length >= 10) { allNumbers.push(currentDigits); } currentDigits = ""; } } // Son sayıyı ekle if (currentDigits.length >= 10) { allNumbers.push(currentDigits); } console.log("Bulunan tüm 10+ haneli sayılar:", allNumbers); // 13 haneli ve 400 ile başlayan sayılara öncelik ver const priorityNumbers = allNumbers.filter(num => num.length === 13 && num.startsWith("400") ); if (priorityNumbers.length > 0) { barkodNo = priorityNumbers[0]; console.log("13 haneli ve 400 ile başlayan ideal barkod bulundu:", barkodNo); } else { // Sadece 13 haneli sayıları ara const exact13 = allNumbers.filter(num => num.length === 13); if (exact13.length > 0) { barkodNo = exact13[0]; console.log("13 haneli barkod bulundu:", barkodNo); } else { // 400 ile başlayan sayıları ara const with400 = allNumbers.filter(num => num.startsWith("400")); if (with400.length > 0) { // Uzunluğu 13e en yakın olanı seç with400.sort((a, b) => Math.abs(a.length - 13) - Math.abs(b.length - 13)); let selectedNumber = with400[0]; if (selectedNumber.length > 13) { selectedNumber = selectedNumber.substring(0, 13); } barkodNo = selectedNumber; console.log("400 ile başlayan sayıdan barkod oluşturuldu:", barkodNo); } } } } }`
